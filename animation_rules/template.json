{
  "_": [
    "_: list[str...]            -> List of comments; optional.",
    "ruleset: str               -> Path to a ruleset python file from the directory 'rulesets/'.",
    "frame_rate: int            -> Number of frames per second in output video.",
    "resolution: list[int, int] -> Width and height of output video in pixels.",
    "max_iterations: int        -> Maximum number of iterations.",
    "show_inputs: bool          -> Whether to render colored circles marking the locations of the inputs.",
    "show_displays: bool        -> Whether to render text in the corner that shows the value of each input.",
    "actions: list[action...]   -> List of actions to animate in order.",
    "",
    "'action' format:",
    "easing: str                -> Either 'instant', 'linear', 'in', 'out', or 'in_out'; controls easing style.",
    "                              'instant' ignores interpolation and instantly applies changes.",
    "length: float              -> Length of the action in seconds.",
    "data: list[sub-action...]  -> List of sub-actions to animate simultaneously.",
    "",
    "'sub-action' format:",
    "name: str                  -> Name of the property being modified (See 'Property table').",
    "value: any                 -> Value that the property will be set to (See 'Property table').",
    "",
    "Property table:",
    "The name shown is the value that should be assigned to the 'name' key, and the type and description apply to the 'value' key when 'name' matches.",
    "position: list[float, float, float] -> The real offset, imaginary offset, and zoom (zoom is in pixels per unit) of the camera.",
    "r_offset: float                     -> The real offset (x position) of the camera.",
    "i_offset: float                     -> The imaginary offset (y position) of the camera.",
    "zoom: float                         -> The zoom (in pixels per unit) of the camera.",
    "inputs: list[list[float, float]...] -> A list of complex numbers that correspond to the new values of each input.",
    "                                       Each complex number is a list of two floats (real and imaginary parts).",
    "input_<n>: list[float, float]       -> The value of input n as a complex number (a list of two floats)."
  ],
  "ruleset": "mandelbrot_julia_sets.py",
  "frame_rate": 24,
  "resolution": [1920, 1080],
  "max_iterations": 1024,
  "show_inputs": true,
  "show_displays": true,
  "actions": [
    {"easing": "instant", "length": 0, "data": [{"name": "position", "value": [0, 0, 300]}, {"name": "inputs", "value": [[0, 0]]}]},
    {"easing": "in_out", "length": 5, "data": [{"name": "input_0", "value": [-0.75, 0]}]},
    {"easing": "instant", "length": 1, "data": []},
    {"easing": "in_out", "length": 5, "data": [{"name": "input_0", "value": [-0.5, 0.25]}]},
    {"easing": "instant", "length": 1, "data": []}
  ]
}